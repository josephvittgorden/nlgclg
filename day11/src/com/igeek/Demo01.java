package com.igeek;

/**
 * @author zx
 * @version1.0
 * @description:正则表达式
 * 1.普通字符 :字母,数字,汉字,下划线......
 * 2.转义字符  \n \t \\ \'.......
 * 3.标准字符集合
 * 	\w:任意一个字母,数字,下划线
 *  \d:任意一个数字
 *  \s:空格,制表符,换行等空白字符中的任意一个
 *  .:小数点可以匹配任意一个字符 不包括\n
 *  [\s\S]:可以匹配包括\n在内的所有字符
 *  大写是相反的含义
 *  \W
 *  \D
 *  \S
 * 4.[] :方括号
 *  4.1:[ja4] 匹配 "j" 或者 "a" 或者 "4"
 *  4.2:[^abc] 匹配 "a","b","c"之外的任意一个字符
 *  4.3:[a-b]:匹配a-b之间的任意一个字符
 * 5.量词
 * 	5.1:{n}:重复n次
 * 	5.2:{m,n}:至少重复m次,最多重复n次
 *  5.3:{m,}:至少重复m次
 *  5.4: ?  0次或者1次  {0,1}
 *  5.5: +	至少出现一次 {1,}
 *  5.6: *  不出现或者出现任意次 {0,}
 *  
 *6.字符边界
 *	^:与字符串开始的地方匹配
 *  $:与字符串结束的地方匹配
 *  \b:匹配一个单词边界,匹配的是这样一个位置,前面的字符和后面的字符不全是\w
 *  
 *  
 *  |:或的关系
 *  
 *  
 *  需求:
 *  	电话号码的验证
 *  	1.数字和-组成
 *  	2.固话:7到8位
 *  	3.固话中的区号:3位或者4位,0开头 025 0511 0514
 *  	4.固话:区号有"-"和号码隔开
 *  	5.手机号:11位
 *  	6.手机号开头:13,15,17
 *  
 *  (0\d{2,3}-\d{7,8})|(1[3579]\d{9})
 *  
 *  需求:
 *  	电子邮箱的地址验证
 *  	1.用户名:字母,数字,下划线
 *  	2.@
 *  	3.地址:字母,数字组成  qq 163 126 sina ....
 *  	4.小数点 .
 *  	5.域名 com,edu,gov,cn.... 2-3位字母组成
 *  	6.不区分大小写
 *  
 *  [\w]+@[a-z0-9A-z]+(.[a-zA-Z]{2,3}){1,2}
 *  	
 *  
 * 
 */
public class Demo01 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
